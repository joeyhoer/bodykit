////
/// @group Mixins
/// @author Joey Hoer
////

///
/// Get a list of `src` values appropriate for use with `@font-face`
///
/// @param {List} $formats - A list of formats to include (by file extension)
/// @param {String} $file-path - The path to the font file(s), including the basename
///   of the file(s)
/// @param {String} $font-family - The name of the font family (fragment identifier),
///   required only if SVG font's are being used
///
/// @return {List} - A comma separated list of font sources
///
@function _font-src(
    $formats,
    $file-path,
    $font-family: null
){

    // Create an empty comma separated list
    $srcs: join((),(),comma);
    @each $format in $formats {

        $format-file-path: '#{$file-path}.#{$format}';

        @if $format == eot {
            $format-file-path: '#{$format-file-path}?#iefix';
            $format: embedded-opentype;
        }
        @elseif $format == ttf {
            $format: truetype;
        }
        @elseif $format == svg {
            // SVG's require a fragment identifier to be loaded correctly
            $format-file-path: '#{$format-file-path}##{$font-family}';
        }

        $srcs: append($srcs, url('#{$format-file-path}') format('#{$format}'));
    }

    @return $srcs;

}

///
/// Create a bulletproof `@font-face` rule
/// The order of `@font-face` rules matter. To ensure fonts load correctly, they must
/// be declared in the following order: normal, bold, italic, bold+italic.
///
/// @param {String} $font-family - The name of the font family
/// @param {String} $file-path - The path to the font file[s], including the basename
///   of the file(s)
/// @param {String} $weight [normal] - The font weight of the font face rule
/// @param {String} $style [normal] - The font style of the font face rule
/// @param {List} $formats [eot woff ttf svg] The font formats to be included in the
///   font face rule
///
@mixin font-face(
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $formats: eot woff ttf svg
){

    // @todo Add `unicode-range` and other properties

    // Allow style and weight to be interchangeable
    @if index('italic' 'oblique', $weight) {
        $tmp-style: $style;
        $style: $weight;
        $weight: $tmp-style;
    }

    @font-face {
        font-family: $font-family;

        @if $weight != normal {
            font-weight: $weight;
        }

        @if $style != normal {
            font-style: $style;
        }

        // Old IE, which supports EOT doesn't support multiple formats `src`
        @if index($formats, eot) {
            src: url('#{$file-path}.eot');
        }

        src: _font-src($formats, $file-path, $font-family);
    }

}
