////
/// @group Grid
/// @author Joey Hoer
////

$gutter: 0;

///
///
///
@mixin set-gutter(
    $gutter-width
) {
    $gutter: $gutter-width !global;
}

///
/// Contain floated grid
/// Grids with fixed width gutter should specify a gutter width
/// Grids with fluid (percentage based) gutters need not
///  specify gutter width
///
///
///
@mixin grid-container(
    $gutter-width: $gutter
){

    // @include clearfix;

    @if not is-percentage($gutter-width) and $gutter-width != 0 {
        margin-right: -1 * $gutter-width;
    }
}

@mixin grid-column(
    $gutter-width: $gutter
){

    float: left;

    @if $gutter-width != 0 {
        @if is-percentage($gutter-width) {
            margin-right: $gutter-width;

            &:last-child {
                // The last child might not "complete" a row,
                // do not float it right
                margin-right: 0;
            }
        }
        @else {
            // TODO: Consider using border instead of padding to
            // allow padding to be used within the column
            // Make background-cip optional?
            padding-right: $gutter-width;
            background-clip: content-box;

            // border-right: $gutter-width rgba(0,0,0,0) solid;
            // background-clip: padding-box;

            // Check for global border-box?
            box-sizing: border-box;
        }
    }
}

///
///
///
///
///
@mixin grid-span-columns(
    $columns,
    $total-columns,
    $gutter-width: $gutter
){

    @if is-percentage($gutter-width) {
        //width: (100% - $gutter-width * ($columns - 1))/$columns;
        $one-column-width: (100% - $gutter * ($total-columns - 1))/$total-columns;
        $width: ($one-column-width * $columns) + ($gutter * ($columns - 1));
        width: $width;
    }
    @else {
        width: 100% * $columns / $total-columns;
    }

}

///
/// Clears the last column in a row
///
///
@mixin omega(
    $nth: null
){
    //:last-child?
    &:nth-child(#{$nth}){
        // Hide rounding errors in the "middle" (optional?)
        float: right;
        margin-right: 0;
    }

    //&:nth-child(#{$nth}+1){
    // clear: both;
    //}
}
